variables:
  h5json: '$(Build.SourcesDirectory)/H5/H5.Newtonsoft.Json/H5.Newtonsoft.Json.csproj'
  buildConfiguration: 'Release'
  targetVersion: yy.M.$(build.buildId)

pool:
  vmImage: 'windows-latest'

trigger: 
  branches:
    include:
    - master
  paths:
    include:
    - H5/H5.Newtonsoft.Json/*
    - .devops/build-h5-json.yml

pr: none

steps:
- checkout: self
  
- script: |
    echo "Commit message: $(Build.SourceVersionMessage)"

- task: UseDotNet@2
  displayName: 'Use .NET 8.0 SDK'
  inputs:
    packageType: sdk
    version: 8.x
    includePreviewVersions: true
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: PowerShell@2
  displayName: 'Create CalVer Version'
  inputs:
    targetType: 'inline'
    script: |
      $dottedDate = (Get-Date).ToString("yy.M")
      $buildID = $($env:BUILD_BUILDID) 
      $newTargetVersion = "$dottedDate.$buildID"
      Write-Host "##vso[task.setvariable variable=targetVersion;]$newTargetVersion"
      Write-Host "Updated targetVersion to '$newTargetVersion'"

- task: CmdLine@2
  displayName: 'Install h5 compiler'
  inputs:
    script: 'dotnet tool install --global h5-compiler'

- task: DotNetCoreCLI@2
  displayName: 'restore nuget'
  inputs:
    command: 'restore'
    projects: '$(h5json)'

- task: DotNetCoreCLI@2
  displayName: 'build'
  inputs:
    command: 'build'
    projects: '$(h5json)'
    arguments: '-c $(buildConfiguration) /p:Version=$(targetVersion)  /p:AllowUnsafeBlocks=True /p:LangVersion=latest'

- task: DotNetCoreCLI@2
  displayName: 'pack nuget'
  inputs:
    command: 'pack'
    packagesToPack: '$(h5json)'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'off'
    buildProperties: 'Version="$(targetVersion)";AllowUnsafeBlocks="True";LangVersion="latest"'

- task: NuGetCommand@2
  displayName: 'push nuget'
  inputs:
    command: 'push'
    packagesToPush: '**/h5.Newtonsoft.Json.$(targetVersion).nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'nuget-curiosity'